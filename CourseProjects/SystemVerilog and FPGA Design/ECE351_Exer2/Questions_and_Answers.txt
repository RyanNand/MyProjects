1. As written, are all parts of the HDL code parameterized such that changing the value of BITS will properly scale the design?

ANS: Yes, the local parameter (BITS) from the tb.sv file can be changed so that the code will be updated to new data sizes. 
I programmed my portion of the code so that the files (add_sub, mult, top, num_ones) will update as desired where necessary. 
The provided files (tb, leading_ones, check_results, definitions_pkg, stimulus_generator) was already programmed to update accordingly as well.

2. If so, why? If not, what would have to change?

ANS: The local parameter is in the scope of tb.sv, which has a higher scope then the rest of the files that need BITS. Therefore, when 
instantiating the modules and simply changing the their parameters in the instantiation will update that parameter within the respective module as well.
For example, in the tb.sv file: mult #(.BITS(BITS)) mult_led (...) will update the BITS to whatever is set in tb.sv for the module mult.

I included a transcript showing the results of changing BITS to 4 bits wide.